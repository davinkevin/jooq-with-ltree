<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.github.davinkevin</groupId>
    <artifactId>jooq-with-ltree</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>jooq-with-ltree</name>
    <description>Jooq experimentation with ltree in postgresql</description>

    <properties>
        <java.version>1.8</java.version>
        <kotlin.version>1.3.11</kotlin.version>

        <database.url><![CDATA[jdbc:postgresql://localhost:5432/postgres]]></database.url>
        <database.user>proxyuser</database.user>
        <database.password>test-password</database.password>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.11.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/kotlin</sourceDirectory>
        <testSourceDirectory>src/test/kotlin</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <groupId>org.jetbrains.kotlin</groupId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                    </compilerPlugins>
                    <jvmTarget>1.8</jvmTarget>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>42.1.4</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <changeLogFile>src/main/db/changelog.xml</changeLogFile>
                    <driver>org.postgresql.Driver</driver>
                    <url>${database.url}</url>
                    <username>proxyuser</username>
                    <password>${database.password}</password>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.10.8</version>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>42.1.4</version>
                        <scope>runtime</scope>
                    </dependency>
                    <dependency>
                        <groupId>com.google.cloud.sql</groupId>
                        <artifactId>postgres-socket-factory</artifactId>
                        <version>1.0.10</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                        <version>2.3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-core</artifactId>
                        <version>2.3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                        <version>2.3.0</version>
                    </dependency>
                    <dependency>
                        <groupId>javax.activation</groupId>
                        <artifactId>javax.activation-api</artifactId>
                        <version>1.2.0</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>${database.url}</url>
                        <user>${database.user}</user>
                        <password>${database.password}</password>
                    </jdbc>
                    <generator>
                        <database>

                            <forcedTypes>
                                <forcedType>

                                    <!-- Specify the Java type of your custom type. This corresponds to the Binding's <U> type. -->
                                    <userType>java.lang.String</userType>

                                    <!-- Associate that custom type with your binding. -->
                                    <binding>com.github.davinkevin.jooqwithltree.converter.PostgresLtreeBinding</binding>

                                    <!-- Add a Java regular expression matching fully-qualified columns. Use the pipe to separate several expressions.

                                         If provided, both "expressions" and "types" must match. -->
                                    <expression>.*tree.path.*</expression>

                                    <!-- Add a Java regular expression matching data types to be forced to
                                         have this type.

                                         Data types may be reported by your database as:
                                         - NUMBER              regexp suggestion: NUMBER
                                         - NUMBER(5)           regexp suggestion: NUMBER\(5\)
                                         - NUMBER(5, 2)        regexp suggestion: NUMBER\(5,\s*2\)
                                         - any other form

                                         It is thus recommended to use defensive regexes for types.

                                         If provided, both "expressions" and "types" must match. -->
                                    <types>.*</types>
                                </forcedType>
                            </forcedTypes>

                            <name>org.jooq.util.postgres.PostgresDatabase</name>
                            <inputSchema>public</inputSchema>
                            <excludes>Databasechangelog|Databasechangeloglock</excludes>

                            <includeTables>true</includeTables>
                            <includeRoutines>false</includeRoutines>
                            <includePackages>false</includePackages>
                            <includeUDTs>false</includeUDTs>
                            <includeSequences>true</includeSequences>
                            <includePrimaryKeys>false</includePrimaryKeys>
                            <includeUniqueKeys>false</includeUniqueKeys>
                            <includeForeignKeys>false</includeForeignKeys>
                        </database>

                        <target>
                            <packageName>com.github.davinkevin.jooqwithltree.database</packageName>
                            <directory>target/generated-sources/jooq/</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
